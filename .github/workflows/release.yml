name: Release binaries

on:
  push:
    branches:
      - master
    tags:
      - v*
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux
            goarch: amd64
            archive: tar.gz
            ext: ""
          - goos: linux
            goarch: arm64
            archive: tar.gz
            ext: ""
          - goos: windows
            goarch: amd64
            archive: zip
            ext: ".exe"
          - goos: windows
            goarch: arm64
            archive: zip
            ext: ".exe"
          - goos: darwin
            goarch: amd64
            archive: tar.gz
            ext: ""
          - goos: darwin
            goarch: arm64
            archive: tar.gz
            ext: ""

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache: true

      - name: Print Go env
        run: |
          go version
          go env

      - name: Prepare env
        run: |
          mkdir -p dist
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          else
            echo "VERSION=$(date +%Y%m%d)-${GITHUB_SHA::7}" >> $GITHUB_ENV
          fi

      - name: Build
        env:
          CGO_ENABLED: '0'
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          BIN_NAME=prefix-proxy${{ matrix.ext }}
          go build -trimpath -ldflags "-s -w" -o "dist/${BIN_NAME}" ./

      - name: Archive
        run: |
          set -euo pipefail
          NAME="prefix-proxy-go_${VERSION}_${{ matrix.goos }}_${{ matrix.goarch }}"
          if [[ "${{ matrix.archive }}" == "zip" ]]; then
            (cd dist && zip -9 "${NAME}.zip" "prefix-proxy${{ matrix.ext }}")
            echo "ASSET=dist/${NAME}.zip" >> $GITHUB_ENV
          else
            tar -C dist -czf "dist/${NAME}.tar.gz" "prefix-proxy${{ matrix.ext }}"
            echo "ASSET=dist/${NAME}.tar.gz" >> $GITHUB_ENV
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: prefix-proxy-go_${{ env.VERSION }}_${{ matrix.goos }}_${{ matrix.goarch }}
          path: ${{ env.ASSET }}
          if-no-files-found: error

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Show downloaded files
        run: |
          ls -R dist | sed -e 's/^/  /'

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


